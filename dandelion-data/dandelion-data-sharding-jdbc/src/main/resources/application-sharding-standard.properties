# 数据源配置
spring.shardingsphere.datasource.names=dandelion-sds-00,dandelion-sds-01

spring.shardingsphere.datasource.dandelion-sds-00.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.dandelion-sds-00.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.dandelion-sds-00.url=jdbc:mysql://192.168.80.100:3306/dandelion_sds_00?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.dandelion-sds-00.username=root
spring.shardingsphere.datasource.dandelion-sds-00.password=root

spring.shardingsphere.datasource.dandelion-sds-01.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.dandelion-sds-01.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.dandelion-sds-01.url=jdbc:mysql://192.168.80.100:3306/dandelion_sds_01?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.dandelion-sds-01.username=root
spring.shardingsphere.datasource.dandelion-sds-01.password=root

# 分库配置

# 分片键
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
# 分片规则 ds 为数据源配置的‘逻辑名称’
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=dandelion-sds-0$->{id % 2}
# 绑定表，当同一个请求查询不同数据表时，保证当前数据都在同一分片下
spring.shardingsphere.sharding.binding-tables=d_user,d_user_del

# d_user 分表配置
spring.shardingsphere.sharding.tables.d_user.actual-data-nodes=dandelion-sds-0$->{0..1}.d_user$->{0..1}
# 分片键设置
spring.shardingsphere.sharding.tables.d_user.table-strategy.inline.sharding-column=user_id
# 分片规则
spring.shardingsphere.sharding.tables.d_user.table-strategy.inline.algorithm-expression=d_user$->{user_id % 2}
spring.shardingsphere.sharding.tables.d_user.key-generator.column=id
# 可使用用户自定义的列值生成器或选择内置类型：SNOWFLAKE/UUID
spring.shardingsphere.sharding.tables.d_user.key-generator.type=SNOWFLAKE

# d_user_del 分表配置
spring.shardingsphere.sharding.tables.d_user_del.actual-data-nodes=dandelion-sds-0$->{0..1}.d_user_del$->{0..1}
# 分片键设置
spring.shardingsphere.sharding.tables.d_user_del.table-strategy.inline.sharding-column=user_id
# 分片规则
spring.shardingsphere.sharding.tables.d_user_del.table-strategy.inline.algorithm-expression=d_user_del$->{user_id % 2}
# 广播表
#spring.shardingsphere.sharding.broadcast-tables=t_province
# sharding.jdbc.config.sharding.broadcast-tables=t_province

# 打印SQL
spring.shardingsphere.props.sql.show=true
